{"version":3,"sources":["GithubCorner.js","App.js","index.js"],"names":["GithubCorner","props","dangerouslySetInnerHTML","__html","App","useState","data","setData","darkMode","setDarkMode","sortedBy","setSortedBy","sortTable","sortBy","shouldSwap","node1","node2","childNodes","innerText","table","document","getElementById","nodes","i","length","j","insertBefore","useEffect","fetch","then","response","json","className","type","id","onKeyUp","e","searchBy","toLowerCase","includes","style","display","search","target","value","placeholder","title","onClick","src","map","item","key","href","link","rel","description","category","ReactDOM","render","StrictMode"],"mappings":"mLAAe,SAASA,EAAaC,GACjC,OACI,sBAAMC,wBAAyB,CAACC,OAAO,kiDCEhC,SAASC,IAEtB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,SAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAQA,SAASC,EAAUC,GAIjB,SAASC,EAAWC,EAAOC,EAAOH,GAChC,MAAc,YAAVA,EACEE,EAAME,WAAW,GAAGC,UAAYF,EAAMC,WAAW,GAAGC,UAK5C,SAAVL,EACEE,EAAME,WAAW,GAAGC,UAAYF,EAAMC,WAAW,GAAGC,eAD1D,EATFP,EAAYE,GAoBZ,IAHA,IAAIM,EAAQC,SAASC,eAAe,SAASJ,WAAW,GACpDK,EAAQH,EAAMF,WAETM,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIH,EAAME,OAAQC,IAC5BX,EAAWQ,EAAMG,EAAE,GAAIH,EAAMG,GAAIZ,IACnCM,EAAMO,aAAaJ,EAAMG,GAAIH,EAAMG,EAAE,IAqB7C,OApDAE,qBAAU,WACRC,MAAM,aACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIxB,EAAQwB,QACvB,IAiDD,sBAAKC,UAAU,MAAf,UACE,cAAChC,EAAD,IACA,uBAAOE,wBAAyB,CAC9BC,OACEK,EAAQ,0UAiBZ,8CACA,sBAAKwB,UAAU,OAAf,UAEE,uBAAOC,KAAK,OAAOC,GAAG,YAAYC,QAAS,SAACC,GAAD,OAxCjD,SAAgBC,GAId,IAHA,IACIf,EADQF,SAASC,eAAe,SAASJ,WAAW,GACtCA,WAETM,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAC5BD,EAAMC,GAAGL,UAAUoB,cAAcC,SAASF,EAASC,eACrDhB,EAAMC,GAAGiB,MAAMC,QAAU,GAGzBnB,EAAMC,GAAGiB,MAAMC,QAAU,OA+ByBC,CAAON,EAAEO,OAAOC,QAAQC,YAAY,SAASC,MAAM,mBACrG,wBAAQC,QAAS,kBAAMtC,GAAaD,IAAWwB,UAAU,cAAzD,SACE,qBAAKgB,IAAI,mBAEE,SAAZtC,EACG,wBAAQqC,QAAS,kBAAMnC,EAAU,aAAasB,GAAG,cAAjD,8BACA,wBAAQa,QAAS,kBAAMnC,EAAU,UAAUsB,GAAG,cAA9C,oCAIN,qBAAKF,UAAU,cAAf,SACE,uBAAOE,GAAG,QAAV,SACE,gCACG5B,EACGA,EAAK2C,KAAI,SAACC,EAAMC,GAChB,OACE,+BACE,6BACE,mBAAGC,KAAMF,EAAKG,KAAMV,OAAO,QAAQW,IAAI,aAAvC,SACGJ,EAAKJ,UAGV,6BACGI,EAAKK,cAER,6BACGL,EAAKM,aAVDL,MAeX,cClHhBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvD,EAAD,MAEFgB,SAASC,eAAe,U","file":"static/js/main.21874861.chunk.js","sourcesContent":["export default function GithubCorner(props){\r\n    return(\r\n        <span dangerouslySetInnerHTML={{__html: \r\n            `<a href=\"https://github.com/owenmoogk/the-compiler\" class=\"github-corner\" aria-label=\"View source on GitHub\" target='_blank'><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;\" aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" class=\"octo-body\"></path></svg></a><style>.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}</style>`\r\n        }}></span>\r\n    )\r\n}","import { useEffect, useState } from 'react';\nimport './style.css';\nimport GithubCorner from './GithubCorner'\n\nexport default function App() {\n\n  const [data, setData] = useState()\n  const [darkMode, setDarkMode] = useState(false)\n  const [sortedBy, setSortedBy] = useState('alpha')\n\n  useEffect(() => {\n    fetch('data.json')\n      .then(response => response.json())\n      .then(json => setData(json))\n  }, [])\n\n  function sortTable(sortBy) {\n\n    setSortedBy(sortBy)\n\n    function shouldSwap(node1, node2, sortBy){\n      if (sortBy == 'category'){\n        if (node1.childNodes[2].innerText > node2.childNodes[2].innerText){\n          return(true)\n        }\n        return(false)\n      }\n      if (sortBy == 'alpha'){\n        if (node1.childNodes[0].innerText > node2.childNodes[0].innerText){\n          return(true)\n        }\n        return(false)\n      }\n    }\n\n    var table = document.getElementById('table').childNodes[0]\n    var nodes = table.childNodes\n\n    for (var i = 0; i < nodes.length; i++){\n      for (var j = 1; j < nodes.length; j++){\n        if (shouldSwap(nodes[j-1], nodes[j], sortBy)){\n          table.insertBefore(nodes[j], nodes[j-1])\n        }\n      }\n    }\n  }\n\n  function search(searchBy){\n    var table = document.getElementById('table').childNodes[0]\n    var nodes = table.childNodes\n\n    for (var i = 0; i < nodes.length; i++){\n      if (nodes[i].innerText.toLowerCase().includes(searchBy.toLowerCase())){\n        nodes[i].style.display = ''\n      }\n      else{\n        nodes[i].style.display = 'none'\n      }\n    }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <GithubCorner />\n      <style dangerouslySetInnerHTML={{\n        __html:\n          darkMode\n            ? `\n            :root{\n              --backgroundColor: black;\n              --textColor: white;\n              --themeColor: blue;\n            }\n          `\n            : `\n            :root{\n              --backgroundColor: white;\n              --textColor: black;\n              --themeColor: lightblue;\n            }\n          `\n      }}>\n      </style>\n      <h1>The Compiler</h1>\n      <div className=\"head\">\n\n        <input type=\"text\" id=\"searchBar\" onKeyUp={(e) => search(e.target.value)} placeholder=\"Search\" title=\"Type to search\" />\n        <button onClick={() => setDarkMode(!darkMode)} className=\"dark-button\">\n          <img src=\"darkmode.png\" />\n        </button>\n        {sortedBy == 'alpha'\n          ? <button onClick={() => sortTable('category')} id=\"sort-button\">Sort by Category</button>\n          : <button onClick={() => sortTable('alpha')} id=\"sort-button\">Sort Alphabetically</button>\n        }\n      </div>\n\n      <div className=\"tableHolder\">\n        <table id=\"table\">\n          <tbody>\n            {data\n              ? data.map((item, key) => {\n                return (\n                  <tr key={key}>\n                    <td>\n                      <a href={item.link} target=\"blank\" rel='noreferrer'>\n                        {item.title}\n                      </a>\n                    </td>\n                    <td>\n                      {item.description}\n                    </td>\n                    <td>\n                      {item.category}\n                    </td>\n                  </tr>\n                )\n              })\n              : null\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}